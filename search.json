[{"title":"回忆Misaka No(钟致远)","date":"2022-10-29T00:41:38.000Z","url":"/2022/10/29/%E5%9B%9E%E5%BF%86Misaka-No-%E9%92%9F%E8%87%B4%E8%BF%9C/","categories":[[" ",""]],"content":"前言最近Misaka No 被开盒而退网，想起来还是挺唏嘘的。本文以“我”的视角回忆一下他，带有强烈的主观色彩，不喜勿看。 记忆初识当时我还不会自己搭建扶墙节点，想学但苦于没有vps。在搜寻资源的时候发现了善于白嫖的他。并且按照他第一代博客()的教程，搞到了hax的vps。之后我用了他的x-ui、warp、xray脚本等工具，觉得他是个无所不能的大佬，立即拜倒。 小有改变后来仔细看了他的github项目，发现这些东西都是改编自别人，我觉得有点失望，于是又找到各项目的原作，用回原作了。 再度崇拜后来看他发了很多白嫖教程，我也跟着他白嫖了很多资源。白嫖的感觉非同一般的爽。又发现上游网络跳跃跑路了，觉得他尽到了开源使用者的义务——继续维护停更了的项目。xray支持shadowsocks-2022后，他也在x-ui里及时增加。 又觉得不对劲后来发现这些白嫖的资源质量都很低，ip也因嫖的人过多而很脏。而且自己几百年都不一定用一次。我开始怀疑：嫖来这堆垃圾，自己没用，还占用了别人需要的资源，真的好吗？ 又找到了FranzKafkaYu维护的x-ui，发现misaka版的x-ui引以为傲的功能包括ss-2022都是FranzKafkaYu完成的。这时misaka在我眼里成了一个fork别人项目、把配置改成自己喜欢的、再做成全家桶的360式流氓。 惋惜过了一段时间，发现misaka关网站了，TG群也禁言。看里面提到“怕影响自身前途”，我还以为他是喝茶去了。不禁感到惋惜：虽然都是抄的，但给了小白很多指引。 找到小号一段时间后，我发现了一个疑似他小号的账户（后来也证实确实是他）—— taffychan。我发现他新做了naiveproxy的脚本，虽然不太完善，但可以用。这总是他原创的了吧。看到他没死，还做了新作品，我觉得他会积极发展了。 重出江湖又过了一段时间，Misaka终于憋不住，重新开启了博客()。这时我觉得他有点恶心了:又不恢复之前所有的文章，就出几篇几个意思？炒冷饭吗？ 再看他Gitlab上的x-ui:闭源了？赤裸裸地违反开源许可！原作可是高贵的GNU-3.0许可证，你就因为代码被抄袭了就闭源？而且看到他每个脚本的界面上都大大地写着是他做的，原本网络跳跃的脚本里，原作竟然改成了他Misaka No？我立刻觉得他太不要脸了。 装高冷他在修改他的naiveproxy脚本时，我拿过去完善了一下，但还是有点问题（他新改的连运行都不行），我去找他发问，他会都不回。有疑问在他群里问，他也不理我。几天后他完善了新的naive脚本，我就怀疑他抄了我修改的部分，当然也只是怀疑。但他既然成功完善了脚本，应该能回答我的问题，但他就是没回答，不像贴心的@armeabi-v7a尽力解答issue。这行为让我很气。 被开盒最后由于和coia的矛盾，misaka终于被开了。刚看完了他的rip，有点幸灾乐祸，觉得misaka罪有因得。甬哥说的也有理。misaka滥用得太过度了，自己没有ipv6还撸了一大把的hax和woiden。虽然甬哥抄别人代码，自己肯定也跟着misaka滥用，但他在自己的视频里演示hysteria脚本时，也告诫大家不要在woiden上用，有一定的底线。 个人对Misaka No的评价高度概括就是:小学生，心智不成熟。 对于我来讲，他给了我一定的技术启蒙，但也因高高在上的姿态伤害了我。"},{"title":"GFW奇思妙想","date":"2022-10-28T13:54:37.000Z","url":"/2022/10/28/GFW%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/","categories":[[" ",""]],"content":"true fake dns监听在53端口的udp协议，dns头部加上加密。也许不能骗过GFW，但是可能能穿越校园网&#x2F;公司内网甚至是免流？ 社工封锁如果你使用了被确定用于扶墙用途的节点将会增加本带宽的可疑性，可疑性高的带宽连接的境外ip将增加被封锁的几率。可疑性会随着时间推移而降低。可疑性到达一定等级会进行境外连接限速&#x2F;随机阻断等干扰直至白名单，使用中转等手段会继续增加，直至国内白名单。 CA攻击GFW与本国CA机构合作，为GFW签发合法的证书以攻击TLS流量。 随机对抗重放攻击搭建无tls服务器时对每个服务器生成一个随机概率：面对重放攻击，随机选择不回复、立刻断开连接、回落或发送特定数据包，将制造更多不同的特征。 xvmess类似于xtls，只是vmess在不使用tls的情况下，只加密请求头而暴露后面经tls加密后的内容。特征未知。 “不加密”某些地区可以使用vless裸连，那我们何必追求加密？只要调整协议语法、信息排列顺序就能暂时使GFW无法识别该协议。如果不想暴露自己访问的网站，可以配合tor。 全能反代应配合“不加密”。可以自建国内&#x2F;内网 dot&#x2F;doh 并将所有dns解析到自己的sni反代服务器，再设置ech。个人认为能消除TLS指纹和TLS in TLS，且中间人看到的证书始终只有一个网站。之所以要配合“不加密”是因为国内的ech&#x2F;esni被阻断了。"},{"title":"Hello World","date":"2022-10-28T13:40:00.319Z","url":"/2022/10/28/hello-world/","categories":[[" ",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"}]