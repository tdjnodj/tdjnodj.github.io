<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TDJNODJ&#39;s blog</title>
  
  
  <link href="https://blog.tangdaojing.ml/atom.xml" rel="self"/>
  
  <link href="https://blog.tangdaojing.ml/"/>
  <updated>2022-11-19T07:19:48.055Z</updated>
  <id>https://blog.tangdaojing.ml/</id>
  
  <author>
    <name>TDJ no dj</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>macOS搭建网页版clashX</title>
    <link href="https://blog.tangdaojing.ml/2022/11/05/web-clash/"/>
    <id>https://blog.tangdaojing.ml/2022/11/05/web-clash/</id>
    <published>2022-11-05T02:37:23.000Z</published>
    <updated>2022-11-19T07:19:48.055Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>clash可以说是机场的绝配了，延迟低的节点刷TG，速度快的节点看视频，解锁流媒体的节点看流媒体，分流有序，测的延迟也让人赏心悦目。只是clash的GUI内存占用太大了，很容易卡死。我便搜索有没有网页版的clash，结果发现clash内核的大佬做了个web ui，而且现在正被clashX使用！那我为什么不用web ui呢？</p><p>注:</p><p>项目地址： <a href="https://github.com/Dreamacro/clash-dashboard">https://github.com/Dreamacro/clash-dashboard</a></p><p>网页体验：<a href="https://clash.razord.top/">https://clash.razord.top</a></p><h1 id="折腾"><a href="#折腾" class="headerlink" title="折腾"></a>折腾</h1><p>有三种获得网页的方式：1.使用<code>wget -m</code> 2.拉取编译好的网页（推荐） 3.自行编译（不做教学）</p><h2 id="下载网页"><a href="#下载网页" class="headerlink" title="下载网页"></a>下载网页</h2><h3 id="1-wget"><a href="#1-wget" class="headerlink" title="1.wget"></a>1.wget</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ wget -m https:<span class="hljs-regexp">//</span>clash.razord.top<br></code></pre></td></tr></table></figure><h3 id="2-拉取编译好的网页"><a href="#2-拉取编译好的网页" class="headerlink" title="2.拉取编译好的网页"></a>2.拉取编译好的网页</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone -b gh-pages https://github.com/Dreamacro/clash-dashboard.git<br></code></pre></td></tr></table></figure><h2 id="启用macOS自带的apache2"><a href="#启用macOS自带的apache2" class="headerlink" title="启用macOS自带的apache2"></a>启用macOS自带的apache2</h2><p>参考: <a href="https://www.jianshu.com/p/a95c9893b683">https://www.jianshu.com/p/a95c9893b683</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> sudo apachectl <span class="hljs-built_in">start</span><br></code></pre></td></tr></table></figure><p>然后访问 <a href="http://localhost/">http://localhost</a> 验证是否已启用</p><h2 id="部署网页"><a href="#部署网页" class="headerlink" title="部署网页"></a>部署网页</h2><p>把文件夹<code>clash-dashboard</code>内的内容移动到<code>/Library/WebServer/Documents</code></p><p>之后，直接访问localhost就能使用了！</p><h2 id="添加SSL证书"><a href="#添加SSL证书" class="headerlink" title="添加SSL证书"></a>添加SSL证书</h2><p>由于我的localhost部署了太多服务，每次在浏览器输入<code>localhost</code>时都会联想出别的端口，为了方便，我把某个可怜的网页的host改为了127.0.0.1，为了正式一点，再给它发个证书吧！</p><h3 id="自签证书"><a href="#自签证书" class="headerlink" title="自签证书"></a>自签证书</h3><p>不做教学</p><h3 id="为apache2安装证书"><a href="#为apache2安装证书" class="headerlink" title="为apache2安装证书"></a>为apache2安装证书</h3><p>参考:</p><p><a href="https://help.aliyun.com/document_detail/98727.html">https://help.aliyun.com/document_detail/98727.html</a></p><p><a href="https://www.jianshu.com/p/dc97dfd4bf63">https://www.jianshu.com/p/dc97dfd4bf63</a></p><p>将证书和私钥放在<code>/etc/apache2</code>并重命名为<code>server.crt</code>和<code>server.key</code></p><p>修改’&#x2F;etc&#x2F;apache2&#x2F;httpd.conf’，注意要有root权限</p><p>找到 #LoadModule ssl_module modules&#x2F;mod_ssl.so和#Include conf&#x2F;extra&#x2F;httpd-ssl.conf，去掉前面的#号注释</p><p>并在最后加上以下内容:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs conf">&lt;VirtualHost *:443&gt;<br>ServerName clash.org # 改成想要劫持的域名<br>&lt;/VirtualHost&gt;<br></code></pre></td></tr></table></figure><p>把证书添加到信任列表中，然后尝试吧！</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>下载clash内核，并在同目录下载一个.mmdb文件(推荐 <a href="https://github.com/Hackl0us/GeoIP2-CN">https://github.com/Hackl0us/GeoIP2-CN</a> )</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">clash(换成你的内核名) -f 配置名.yaml<br></code></pre></td></tr></table></figure><p>然后就能到网页版操作了。</p><p>但是开着命令行不好看，可以使用tmux让内核在后台运行。</p><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><p>1.容易忘记关内核。</p><p>2.更新订阅不容易、容易忘</p><p>3.更新ip数据库不及时。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;clash可以说是机场的绝配了，延迟低的节点刷TG，速度快的节点看视频，解锁流媒体的节点看流媒体，分流有序，测的延迟也让人赏心悦目。只是cl</summary>
      
    
    
    
    <category term="搭建" scheme="https://blog.tangdaojing.ml/categories/%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="GFW" scheme="https://blog.tangdaojing.ml/tags/GFW/"/>
    
    <category term="macOS" scheme="https://blog.tangdaojing.ml/tags/macOS/"/>
    
    <category term="clash" scheme="https://blog.tangdaojing.ml/tags/clash/"/>
    
  </entry>
  
  <entry>
    <title>节点提升伪装性思路</title>
    <link href="https://blog.tangdaojing.ml/2022/11/02/node-like-a-parrot/"/>
    <id>https://blog.tangdaojing.ml/2022/11/02/node-like-a-parrot/</id>
    <published>2022-11-02T13:35:49.000Z</published>
    <updated>2022-11-19T07:19:37.302Z</updated>
    
    <content type="html"><![CDATA[<h1 id="解决DNS嫌疑"><a href="#解决DNS嫌疑" class="headerlink" title="解决DNS嫌疑"></a>解决DNS嫌疑</h1><p>某些时候，由于错误的配置，大量的DNS请求会通过代理发送。在GFW的视角看起来就很可疑了，所以如果是常用web服务器前置的话，可以通过以下措施减轻嫌疑：</p><h4 id="反代DOH"><a href="#反代DOH" class="headerlink" title="反代DOH"></a>反代DOH</h4><p>以nginx为例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs conf">location /dns-query &#123;<br>    proxy_pass https://cloudflare-dns.com;<br>    proxy_redirect off;<br>    proxy_ssl_server_name on;<br>    sub_filter_once off;<br>    sub_filter &quot;cloudflare-dns.com&quot; $server_name;<br>    proxy_set_header Host &quot;cloudflare-dns.com&quot;;<br>    proxy_set_header Referer $http_referer;<br>    proxy_set_header X-Real-IP $remote_addr;<br>    proxy_set_header User-Agent $http_user_agent;<br>    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;<br>    proxy_set_header X-Forwarded-Proto https;<br>    proxy_set_header Accept-Encoding &quot;&quot;;<br>    proxy_set_header Accept-Language &quot;zh-CN&quot;;<br>&#125;<br></code></pre></td></tr></table></figure><p>这样在自己的服务器上建立了一个DOH服务。</p><p>但是，谁知道你有个DOH服务？</p><p>如果是自建网页的话，可以在网页里写上欢迎使用本站DOH之类的话，</p><p>如果是反代网站，可以在朋友间小范围传播这个DOH。这样还能增加访问量，减少可疑性。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;解决DNS嫌疑&quot;&gt;&lt;a href=&quot;#解决DNS嫌疑&quot; class=&quot;headerlink&quot; title=&quot;解决DNS嫌疑&quot;&gt;&lt;/a&gt;解决DNS嫌疑&lt;/h1&gt;&lt;p&gt;某些时候，由于错误的配置，大量的DNS请求会通过代理发送。在GFW的视角看起来就很可疑了，所以如果是</summary>
      
    
    
    
    <category term="灵感记录" scheme="https://blog.tangdaojing.ml/categories/%E7%81%B5%E6%84%9F%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="GFW" scheme="https://blog.tangdaojing.ml/tags/GFW/"/>
    
    <category term="灵感" scheme="https://blog.tangdaojing.ml/tags/%E7%81%B5%E6%84%9F/"/>
    
    <category term="伪装" scheme="https://blog.tangdaojing.ml/tags/%E4%BC%AA%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>小naive:trojan-go后置 + 客户端隐藏指纹，消除TLS指纹问题 + 缓解tls in tls特征！我愿称之为naiveproxy的另一种实现！</title>
    <link href="https://blog.tangdaojing.ml/2022/11/02/trojango/"/>
    <id>https://blog.tangdaojing.ml/2022/11/02/trojango/</id>
    <published>2022-11-02T13:21:31.000Z</published>
    <updated>2022-11-19T07:14:27.317Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>虽然naiveproxy能消除指纹问题，但真的太慢了。有没有既要当__又要__的方法呢？那就使用GFW report修改后的trojan-go来实现吧！</p><h1 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h1><h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><p>一键安装必要环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">pt update -y<br>apt upgrade<br>apt install  wget curl<br>apt install tmux -y #安装tmux以后台运行<br>apt install nano #安装nano文本编辑器<br>wget -N https://raw.githubusercontent.com/fscarmen/warp/main/menu.sh &amp;&amp; bash menu.sh [option] [lisence]  #安装warp<br></code></pre></td></tr></table></figure><h4 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h4><p>&#x2F;etc&#x2F;nginx&#x2F;nginx.conf</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs json">user www-date;<br>worker_processes auto;<br>pid /run/nginx.pid; #不要删了<br>include /etc/nginx/modules-enabled<span class="hljs-comment">/*.conf;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">events &#123;</span><br><span class="hljs-comment">    worker_connections 1024;</span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">http &#123;</span><br><span class="hljs-comment">    sendfile on;</span><br><span class="hljs-comment">    tcp_nopush on;</span><br><span class="hljs-comment">    tcp_nodelay on;</span><br><span class="hljs-comment">    keepalive_timeout 65;</span><br><span class="hljs-comment">    types_hash_max_size 2048;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    include /etc/nginx/mime.types;</span><br><span class="hljs-comment">    default_type application/octet-stream;</span><br><span class="hljs-comment">    gzip on;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    server &#123;</span><br><span class="hljs-comment">        listen 0.0.0.0:443 ssl;  #ipv6要把&quot;0.0.0.0&quot;改为&quot;[::]&quot;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">        server_name nicename.co;  #你的域名</span><br><span class="hljs-comment">        ssl_certificate       /path/cert.crt;  #证书位置</span><br><span class="hljs-comment">        ssl_certificate_key   /path/private.key; #私钥位置</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">        ssl_session_timeout 1d;</span><br><span class="hljs-comment">        ssl_session_cache shared:MozSSL:10m;</span><br><span class="hljs-comment">        ssl_session_tickets off;</span><br><span class="hljs-comment">        ssl_protocols    TLSv1.2 TLSv1.3; #旧版本可能不兼容新的加密方式，可以在前面加TLSv1.1</span><br><span class="hljs-comment">        ssl_prefer_server_ciphers off;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">        location / &#123;</span><br><span class="hljs-comment">            proxy_pass https://bing.com; #伪装网址，注意是否有www</span><br><span class="hljs-comment">            proxy_redirect off;</span><br><span class="hljs-comment">            proxy_ssl_server_name on;</span><br><span class="hljs-comment">            sub_filter_once off;</span><br><span class="hljs-comment">            sub_filter &quot;bing.com&quot; $server_name;</span><br><span class="hljs-comment">            proxy_set_header Host &quot;bing.com&quot;; #跟伪装网址一致</span><br><span class="hljs-comment">            proxy_set_header Referer $http_referer;</span><br><span class="hljs-comment">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class="hljs-comment">            proxy_set_header User-Agent $http_user_agent;</span><br><span class="hljs-comment">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="hljs-comment">            proxy_set_header X-Forwarded-Proto https;</span><br><span class="hljs-comment">            proxy_set_header Accept-Encoding &quot;&quot;;</span><br><span class="hljs-comment">            proxy_set_header Accept-Language &quot;zh-CN&quot;;</span><br><span class="hljs-comment">        &#125;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">        location /trojan&#123;   #trojan路径</span><br><span class="hljs-comment">            proxy_redirect off;</span><br><span class="hljs-comment">            proxy_pass http://127.0.0.1:10000; #trojan端口</span><br><span class="hljs-comment">            proxy_http_version 1.1;</span><br><span class="hljs-comment">            proxy_set_header Upgrade $http_upgrade;</span><br><span class="hljs-comment">            proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="hljs-comment">            proxy_set_header Host $host;</span><br><span class="hljs-comment">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class="hljs-comment">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="hljs-comment">        &#125;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    &#125;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    server &#123;</span><br><span class="hljs-comment">        listen 0.0.0.0:80; #同443端口</span><br><span class="hljs-comment">        location /.well-known/ &#123;</span><br><span class="hljs-comment">               root /var/www/html;</span><br><span class="hljs-comment">            &#125;</span><br><span class="hljs-comment">        location / &#123;</span><br><span class="hljs-comment">                rewrite ^(.*)$ https://$host$1 permanent;</span><br><span class="hljs-comment">            &#125;</span><br><span class="hljs-comment">    &#125;</span><br><span class="hljs-comment">&#125;</span><br></code></pre></td></tr></table></figure><p>接着重启nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl reload nginx<br></code></pre></td></tr></table></figure><h4 id="配置trojan-go"><a href="#配置trojan-go" class="headerlink" title="配置trojan-go"></a>配置trojan-go</h4><p><a href="https://github.com/p4gefau1t/trojan-go">https://github.com/p4gefau1t/trojan-go</a><br>先创建一个文件夹，再下载trojan-go(自行替换为对应版本):</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir trojan-go/<br>wget https://github.com/p4gefau1t/trojan-go/releases/download/v0.10.6/trojan-go-linux-amd64.zip<br>unzip trojan-go-linux-amd64.zip<br>rm trojan-go-linux-amd64.zip<br></code></pre></td></tr></table></figure><p>创建一个配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">nano config.json<br><br></code></pre></td></tr></table></figure><p>填入:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;run_type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;server&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;local_addr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;local_port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">10000</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;remote_addr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;remote_port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">80</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-string">&quot;example&quot;</span><br>    <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;mux&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;concurrency&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">8</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;idle_timeout&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">60</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;websocket&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/trojan&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;host&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;nicename.co&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;transport_plugin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;plaintext&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>启动:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">tmux<br>./trojan-go<br></code></pre></td></tr></table></figure><h1 id="客户端连接"><a href="#客户端连接" class="headerlink" title="客户端连接"></a>客户端连接</h1><p>请使用带有指纹混淆的GFW report版<br><a href="https://github.com/gfw-report/trojan-go/releases">https://github.com/gfw-report/trojan-go/releases</a><br>配置文件:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;run_type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;client&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;local_addr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;local_port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1080</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;remote_addr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;nicename.co&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;remote_port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">443</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-string">&quot;example&quot;</span><br>    <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;ssl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;sni&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;nicename.co&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;fingerprint&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;chrome&quot;</span> # 改为你想要伪装的指纹<br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;mux&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;concurrency&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">8</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;idle_timeout&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">60</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;websocket&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/trojan&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;host&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;nicename.co&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><br></code></pre></td></tr></table></figure><p>终端输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./trojan-go<br></code></pre></td></tr></table></figure><p>即可运行</p><h1 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h1><h4 id="缓解tls-in-tls"><a href="#缓解tls-in-tls" class="headerlink" title="缓解tls in tls"></a>缓解tls in tls</h4><p>将多路复用数尽可能设置大，如需无限复用，请在两端将<code>concurrency</code>设为<code>&#39;-1&#39;</code></p><h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><p>1.为什么不在nginx里配合v2ray使用？</p><p>答：v2ray没有指纹伪造，失去了本教程的目的。</p><p>2.为什么过不了CDN</p><p>答：目前据我观察推测是trojan-go的ws实现有问题，无法解决。</p><p>3.为什么还是被墙了</p><p>答：首先本组合没有消除TLS in TLS特征，其次可能是你的流量过大，或是用了被重点监控的ip</p><h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><p><a href="https://github.com/gfw-report/trojan-go" title="GFW report提供的trojan-go">GFW report提供的trojan-go</a><br><a href="https://guide.v2fly.org/advanced/tls_routing_with_nginx.html#trojan-go" title="v2fly教程中的TLS分流">v2fly教程中的TLS分流</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;虽然naiveproxy能消除指纹问题，但真的太慢了。有没有既要当__又要__的方法呢？那就使用GFW report修改后的trojan-g</summary>
      
    
    
    
    <category term="搭建" scheme="https://blog.tangdaojing.ml/categories/%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="GFW" scheme="https://blog.tangdaojing.ml/tags/GFW/"/>
    
    <category term="nginx" scheme="https://blog.tangdaojing.ml/tags/nginx/"/>
    
    <category term="trojan" scheme="https://blog.tangdaojing.ml/tags/trojan/"/>
    
    <category term="naiveproxy" scheme="https://blog.tangdaojing.ml/tags/naiveproxy/"/>
    
  </entry>
  
  <entry>
    <title>论翻墙界的黑历史</title>
    <link href="https://blog.tangdaojing.ml/2022/10/29/fq-black-history/"/>
    <id>https://blog.tangdaojing.ml/2022/10/29/fq-black-history/</id>
    <published>2022-10-29T13:18:40.000Z</published>
    <updated>2022-11-19T07:19:08.820Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>翻墙界看似是个自由软件遍地的良好生态，可实际上大部分开发者都一言难尽<br>本文来盘点一些翻墙界的黑历史。</p><h1 id="history-hysteria"><a href="#history-hysteria" class="headerlink" title="history hysteria!"></a><del>history</del> hysteria!</h1><h3 id="shadowsocksR"><a href="#shadowsocksR" class="headerlink" title="shadowsocksR"></a>shadowsocksR</h3><p>breakwa11魔改了shadowsocksR，但并没有遵守GPL。</p><p>网民们动用了墙外最有效的武器：开盒，开到退网。</p><p>科学界多了一个优良传统：一言不合就开盒。</p><h3 id="Ray之争"><a href="#Ray之争" class="headerlink" title="*Ray之争"></a>*Ray之争</h3><p>RPRX发明的xtls协议因沟通问题与v2ray分家，自立xray。同时RPRX的语气偏于自大，导致很多人不喜欢。</p><p>分就分，但支持哪一派的人都有不理智的粉丝，双方互喷，战火也蔓延到GUI客户端，最后导致Qv2ray停更，对其他GUI也有一定影响。</p><p>现在选择哪边成了政治站队，无关实际，跟饭圈一样。</p><p>争斗还没结束，<a href="https://www.v2fly.org/v5/config/proxy/vless.html">v2fly文档</a>中提出要废除vless并用trojan替代。现在绝大多数trojan都是暴露在前端的，如何面对服务端指纹问题？xtls许可证不同踢掉就算了，那RPRX做的vless也要政治式得否决掉，强。</p><h3 id="脚本作者也好不到哪里去"><a href="#脚本作者也好不到哪里去" class="headerlink" title="脚本作者也好不到哪里去"></a>脚本作者也好不到哪里去</h3><p>优良模范：teddysun、233boy和hijk</p><p>遵守开源许可，态度温和，脚本全能。</p><p>新时代作者：Misaka No &amp; 甬哥侃侃侃</p><p>抄袭代码、简单修改，为了自身利益撕逼、饭圈化。</p><h1 id="感叹"><a href="#感叹" class="headerlink" title="感叹"></a>感叹</h1><p>做的人为了利益乱搞滥改，用的人一脸茫然或被卷入争斗，牛的人不想开源自己使用，GFW坐收渔翁之利。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;翻墙界看似是个自由软件遍地的良好生态，可实际上大部分开发者都一言难尽&lt;br&gt;本文来盘点一些翻墙界的黑历史。&lt;/p&gt;
&lt;h1 id=&quot;hist</summary>
      
    
    
    
    <category term="八卦吃瓜" scheme="https://blog.tangdaojing.ml/categories/%E5%85%AB%E5%8D%A6%E5%90%83%E7%93%9C/"/>
    
    
    <category term="科学上网" scheme="https://blog.tangdaojing.ml/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
    <category term="黑历史" scheme="https://blog.tangdaojing.ml/tags/%E9%BB%91%E5%8E%86%E5%8F%B2/"/>
    
  </entry>
  
  <entry>
    <title>回忆Misaka No(钟致远)</title>
    <link href="https://blog.tangdaojing.ml/2022/10/29/remeber-misakano/"/>
    <id>https://blog.tangdaojing.ml/2022/10/29/remeber-misakano/</id>
    <published>2022-10-29T00:41:38.000Z</published>
    <updated>2022-11-19T07:20:17.558Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近Misaka No 被开盒而退网，想起来还是挺唏嘘的。本文以“我”的视角回忆一下他，带有强烈的主观色彩，不喜勿看。</p><h1 id="记忆"><a href="#记忆" class="headerlink" title="记忆"></a>记忆</h1><h3 id="初识"><a href="#初识" class="headerlink" title="初识"></a>初识</h3><p>当时我还不会自己搭建扶墙节点，想学但苦于没有vps。在搜寻资源的时候发现了善于白嫖的他。并且按照他第一代博客( <a href="https://owo.misaka.rest/">https://owo.misaka.rest</a> ) 的教程，搞到了hax的vps。之后我用了他的x-ui、warp、xray脚本等工具，觉得他是个无所不能的大佬，立即拜倒。</p><h3 id="小有改变"><a href="#小有改变" class="headerlink" title="小有改变"></a>小有改变</h3><p>后来仔细看了他的github项目，发现这些东西都是改编自别人，我觉得有点失望，于是又找到各项目的原作，用回原作了。</p><h3 id="再度崇拜"><a href="#再度崇拜" class="headerlink" title="再度崇拜"></a>再度崇拜</h3><p>后来看他发了很多白嫖教程，我也跟着他白嫖了很多资源。白嫖的感觉非同一般的爽。又发现上游网络跳跃跑路了，觉得他尽到了开源使用者的义务——继续维护停更了的项目。xray支持shadowsocks-2022后，他也在x-ui里及时增加。</p><h3 id="又觉得不对劲"><a href="#又觉得不对劲" class="headerlink" title="又觉得不对劲"></a>又觉得不对劲</h3><p>后来发现这些白嫖的资源质量都很低，ip也因嫖的人过多而很脏。而且自己几百年都不一定用一次。我开始怀疑：嫖来这堆垃圾，自己没用，还占用了别人需要的资源，真的好吗？</p><p>又找到了<a href="https://github.com/FranzKafkaYu/x-ui">FranzKafkaYu维护的x-ui</a>，发现misaka版的x-ui引以为傲的功能包括ss-2022都是FranzKafkaYu完成的。这时misaka在我眼里成了一个fork别人项目、把配置改成自己喜欢的、再做成全家桶的360式流氓。</p><h3 id="惋惜"><a href="#惋惜" class="headerlink" title="惋惜"></a>惋惜</h3><p>过了一段时间，发现misaka关网站了，TG群也禁言。看里面提到“怕影响自身前途”，我还以为他是喝茶去了。不禁感到惋惜：虽然都是抄的，但给了小白很多指引。</p><h3 id="找到小号"><a href="#找到小号" class="headerlink" title="找到小号"></a>找到小号</h3><p>一段时间后，我发现了一个疑似他小号的账户（后来也证实确实是他）—— <a href="https://github.com/taffychan">taffychan</a>。我发现他新做了naiveproxy的脚本，虽然不太完善，但可以用。这总是他原创的了吧。看到他没死，还做了新作品，我觉得他会积极发展了。</p><h3 id="重出江湖"><a href="#重出江湖" class="headerlink" title="重出江湖"></a>重出江湖</h3><p>又过了一段时间，Misaka终于憋不住，重新开启了博客( <a href="https://blog.misaka.rest/">https://blog.misaka.rest</a> )。这时我觉得他有点恶心了:又不恢复之前所有的文章，就出几篇几个意思？炒冷饭吗？</p><p>再看他Gitlab上的x-ui:闭源了？赤裸裸地违反开源许可！原作可是高贵的<a href="https://github.com/vaxilu/x-ui/blob/main/LICENSE">GNU-3.0</a>许可证，你就因为代码被抄袭了就闭源？而且看到他每个脚本的界面上都大大地写着是他做的，原本网络跳跃的脚本里，原作竟然改成了他Misaka No？我立刻觉得他太不要脸了。</p><h3 id="装高冷"><a href="#装高冷" class="headerlink" title="装高冷"></a>装高冷</h3><p>他在修改他的naiveproxy脚本时，我拿过去完善了一下，但还是有点问题（他新改的连运行都不行），我去找他发问，他会都不回。有疑问在他群里问，他也不理我。几天后他完善了新的naive脚本，我就怀疑他抄了我修改的部分，当然也只是怀疑。但他既然成功完善了脚本，应该能回答我的问题，但他就是没回答，不像贴心的<a href="https://github.com/arm64v8a">@armeabi-v7a</a>尽力解答issue。这行为让我很气。</p><h3 id="被开盒"><a href="#被开盒" class="headerlink" title="被开盒"></a>被开盒</h3><p>最后由于和coia的矛盾，misaka终于被开了。刚看完了他的<a href="https://rip.wiki/">rip</a>，有点幸灾乐祸，觉得misaka罪有因得。甬哥<a href="https://ygkkk.blogspot.com/2022/10/blog-post.html">说的</a>也有理。misaka滥用得太过度了，自己没有ipv6还撸了一大把的hax和woiden。虽然甬哥抄别人代码，自己肯定也跟着misaka滥用，但他在自己的<a href="https://www.youtube.com/watch?v=6fbxOhRnXDc&t">视频</a>里演示hysteria脚本时，也告诫大家不要在woiden上用，有一定的底线。</p><h1 id="个人对Misaka-No的评价"><a href="#个人对Misaka-No的评价" class="headerlink" title="个人对Misaka No的评价"></a>个人对Misaka No的评价</h1><p>高度概括就是:小学生，心智不成熟。</p><p>对于我来讲，他给了我一定的技术启蒙。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近Misaka No 被开盒而退网，想起来还是挺唏嘘的。本文以“我”的视角回忆一下他，带有强烈的主观色彩，不喜勿看。&lt;/p&gt;
&lt;h1 id</summary>
      
    
    
    
    <category term="八卦吃瓜" scheme="https://blog.tangdaojing.ml/categories/%E5%85%AB%E5%8D%A6%E5%90%83%E7%93%9C/"/>
    
    
    <category term="misaka" scheme="https://blog.tangdaojing.ml/tags/misaka/"/>
    
    <category term="回忆" scheme="https://blog.tangdaojing.ml/tags/%E5%9B%9E%E5%BF%86/"/>
    
  </entry>
  
  <entry>
    <title>GFW奇思妙想</title>
    <link href="https://blog.tangdaojing.ml/2022/10/28/gfw-idea/"/>
    <id>https://blog.tangdaojing.ml/2022/10/28/gfw-idea/</id>
    <published>2022-10-28T13:54:37.000Z</published>
    <updated>2022-11-19T07:20:03.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="true-fake-dns"><a href="#true-fake-dns" class="headerlink" title="true fake dns"></a>true fake dns</h1><p>监听在53端口的udp协议，dns头部加上加密。也许不能骗过GFW，但是可能能穿越校园网&#x2F;公司内网甚至是免流？</p><h1 id="社工封锁"><a href="#社工封锁" class="headerlink" title="社工封锁"></a>社工封锁</h1><p>如果你使用了被确定用于扶墙用途的节点将会增加本带宽的可疑性，可疑性高的带宽连接的境外ip将增加被封锁的几率。<br>可疑性会随着时间推移而降低。<br>可疑性到达一定等级会进行境外连接限速&#x2F;随机阻断等干扰直至白名单，使用中转等手段会继续增加，直至国内白名单。</p><h1 id="CA攻击"><a href="#CA攻击" class="headerlink" title="CA攻击"></a>CA攻击</h1><p>GFW与本国CA机构合作，为GFW签发合法的证书以攻击TLS流量。</p><h1 id="随机对抗重放攻击"><a href="#随机对抗重放攻击" class="headerlink" title="随机对抗重放攻击"></a>随机对抗重放攻击</h1><p>搭建无tls服务器时对每个服务器生成一个随机概率：面对重放攻击，随机选择不回复、立刻断开连接、回落或发送特定数据包，将制造更多不同的特征。</p><h1 id="x加密"><a href="#x加密" class="headerlink" title="x加密"></a>x加密</h1><p>类似于xtls，只是在不使用tls的协议中，只加密请求头而暴露后面经tls加密后的内容。<br>对于hysteria这种CPU占用高的协议，或许可以采用？</p><h1 id="“不加密”"><a href="#“不加密”" class="headerlink" title="“不加密”"></a>“不加密”</h1><p>某些地区可以使用vless裸连，那我们何必追求加密？只要调整协议语法、信息排列顺序就能暂时使GFW无法识别该协议。<br>如果不想暴露自己访问的网站，可以配合tor。</p><h1 id="全能反代"><a href="#全能反代" class="headerlink" title="全能反代"></a>全能反代</h1><p>应配合“不加密”。<br>可以自建国内&#x2F;内网 dot&#x2F;doh 并将所有dns解析到自己的sni反代服务器，再设置ech。<br>个人认为能消除TLS指纹和TLS in TLS，且中间人看到的证书始终只有一个网站。之所以要配合“不加密”是因为国内的ech&#x2F;esni被阻断了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;true-fake-dns&quot;&gt;&lt;a href=&quot;#true-fake-dns&quot; class=&quot;headerlink&quot; title=&quot;true fake dns&quot;&gt;&lt;/a&gt;true fake dns&lt;/h1&gt;&lt;p&gt;监听在53端口的udp协议，dns头部加上加密。也许</summary>
      
    
    
    
    <category term="灵感记录" scheme="https://blog.tangdaojing.ml/categories/%E7%81%B5%E6%84%9F%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="GFW" scheme="https://blog.tangdaojing.ml/tags/GFW/"/>
    
    <category term="灵感" scheme="https://blog.tangdaojing.ml/tags/%E7%81%B5%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://blog.tangdaojing.ml/2022/10/28/hello-world/"/>
    <id>https://blog.tangdaojing.ml/2022/10/28/hello-world/</id>
    <published>2022-10-28T13:40:00.319Z</published>
    <updated>2022-11-19T07:18:41.547Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="本站相关" scheme="https://blog.tangdaojing.ml/categories/%E6%9C%AC%E7%AB%99%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
</feed>
